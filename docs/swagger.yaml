definitions:
  database.Column:
    properties:
      name:
        type: string
      type:
        type: string
    type: object
  database.Condition:
    properties:
      left:
        type: string
      operator:
        type: string
      right:
        type: string
    type: object
  database.QColumn:
    properties:
      fun:
        type: string
      key:
        type: string
      keyOrder:
        type: integer
      name:
        type: string
      tableKey:
        $ref: '#/definitions/database.QTableKey'
    type: object
  database.QTable:
    properties:
      increment:
        type: integer
      name:
        type: string
      next:
        items:
          $ref: '#/definitions/database.QTable'
        type: array
      rule:
        $ref: '#/definitions/database.Rule'
    type: object
  database.QTableKey:
    properties:
      increment:
        type: integer
      name:
        type: string
    type: object
  database.Rule:
    properties:
      conditions:
        items:
          $ref: '#/definitions/database.Condition'
        type: array
      type:
        type: string
    type: object
  database.Table:
    properties:
      columns:
        items:
          $ref: '#/definitions/database.Column'
        type: array
      name:
        type: string
    type: object
  entity.Query:
    properties:
      columns:
        items:
          $ref: '#/definitions/database.QColumn'
        type: array
      sourceId:
        type: string
      table:
        $ref: '#/definitions/database.QTable'
    type: object
  entity.Source:
    properties:
      connected:
        type: boolean
      databaseName:
        type: string
      driver:
        type: string
      host:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      port:
        type: integer
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /queries/execute:
    post:
      parameters:
      - description: запрос
        in: body
        name: query
        required: true
        schema:
          $ref: '#/definitions/entity.Query'
      responses: {}
      tags:
      - запросы
  /sources:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Source'
            type: array
      tags:
      - источники
    patch:
      parameters:
      - description: источник
        in: body
        name: source
        required: true
        schema:
          $ref: '#/definitions/entity.Source'
      responses: {}
      tags:
      - источники
    post:
      parameters:
      - description: источник
        in: body
        name: source
        required: true
        schema:
          $ref: '#/definitions/entity.Source'
      responses: {}
      tags:
      - источники
  /sources/{id}:
    delete:
      parameters:
      - description: идентификатор источника
        in: path
        name: id
        required: true
        type: string
      responses: {}
      tags:
      - источники
    get:
      parameters:
      - description: идентификатор источника
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Source'
      tags:
      - источники
  /sources/{id}/functions:
    get:
      parameters:
      - description: идентификатор источника
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      tags:
      - источники
  /sources/{id}/tables:
    get:
      parameters:
      - description: идентификатор источника
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.Table'
            type: array
      tags:
      - источники
  /sources/drivers:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      tags:
      - источники
swagger: "2.0"
